{"version":3,"file":"static/js/961.8704c6f6.chunk.js","mappings":"6OAEaA,EAAYC,EAAAA,EAAAA,IAAH,yIAWTC,EAAUD,EAAAA,EAAAA,IAAH,2GAQPE,EAAOF,EAAAA,EAAAA,GAAH,gL,SCmBjB,EApCa,SAAC,GAA0B,IAAxBG,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACvB,OACE,SAACL,EAAD,UACGI,GACCA,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACV,UAACR,EAAD,YACE,UAAC,KAAD,CAAMS,GAAE,kBAAaN,EAAb,SAAR,UACGK,IACC,gBACEE,IAAG,yCAAoCF,GACvCG,IAAKL,EACLM,MAAO,OAGX,SAACX,EAAD,UAAOK,KACP,UAACL,EAAD,yBAAkBM,QAEnBJ,IAAYE,IAAM,SAAC,KAAD,MAZPA,EADJ,KAkBnB,C,8DCUD,UAjCgB,SAAC,GAA0B,IAAxBQ,EAAuB,EAAvBA,QAASV,EAAc,EAAdA,QAC1B,OACE,yBACGU,GAAWA,EAAQC,OAAS,EAC3BD,EAAQT,KAAI,gBAAGC,EAAH,EAAGA,GAAIU,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,WAAxB,OACV,4BACE,UAAC,KAAD,CAAMR,GAAE,kBAAaN,EAAb,YAAR,WACA,qCAAaY,MACX,uBAAIE,KACJ,uBAAID,QAEN,SAAC,KAAD,MANQX,EADA,KAWZ,kDAIP,C,6ICVKa,EAAU,mCAyFhB,UAvFqB,WAAO,IAAD,IACjBf,GAAYgB,EAAAA,EAAAA,MAAZhB,QACR,GAA0BiB,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,UAAS,MAAvC,eAAOlB,EAAP,KAAgBqB,EAAhB,KACA,GAA8BH,EAAAA,EAAAA,UAAS,MAAvC,eAAOP,EAAP,KAAgBW,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAC3D,GAAgDV,EAAAA,EAAAA,UAAS,IAAzD,eAAOW,EAAP,KAAyBC,EAAzB,KA0BA,IAxBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GACIC,MAAM,sCAAD,OACOhC,EADP,oBAC0Be,IAFnC,cAClBkB,EADkB,gBAIAA,EAAcC,OAJd,cAIlBC,EAJkB,OAKxBhB,EAASgB,GALe,SAOMH,MAAM,sCAAD,OACKhC,EADL,4BACgCe,IAR3C,cAOlBqB,EAPkB,iBAUEA,EAAgBF,OAVlB,eAUlBG,EAVkB,OAWxBjB,EAAWiB,EAAYC,MAXC,UAaMN,MAAM,sCAAD,OACKhC,EADL,4BACgCe,IAd3C,eAalBwB,EAbkB,iBAgBEA,EAAgBL,OAhBlB,QAgBlBM,EAhBkB,OAiBxBnB,EAAWmB,EAAYC,SAjBC,4CAAH,qDAoBvBV,GACD,GAAE,CAAC/B,KAECkB,EACH,OAAO,sCAGT,IAAMwB,EAAyB,SAAAC,GAC7Bd,EAAoBc,EACrB,EAED,OACE,iCACE,SAAC,KAAD,CAAerC,GAAIkB,EAAoBoB,QAAvC,sBACA,UAAC,KAAD,YACE,UAAC,KAAD,YACE,gBACErC,IACEW,EAAM2B,YAAN,yCACsC3B,EAAM2B,aACxC,gFAENrC,IAAKU,EAAM4B,MACXrC,MAAO,OAET,wBAAKS,EAAM4B,SACX,uBAAI5B,EAAM6B,YACV,UAAC,KAAD,YACE,yBACE,SAAC,KAAD,CACEzC,GAAE,kBAAaN,EAAb,SACFgD,QAAS,kBAAMN,EAAuB,OAA7B,EAFX,qBAOF,yBACE,SAAC,KAAD,CACEpC,GAAE,kBAAaN,EAAb,YACFgD,QAAS,kBAAMN,EAAuB,UAA7B,EAFX,6BASgB,SAArBd,IACC,SAAC,UAAD,CAAM7B,QAASA,EAASC,QAASA,IAEb,YAArB4B,IACC,SAAC,UAAD,CAASlB,QAASA,EAASV,QAASA,SAK7C,C,yKChGYL,EAAYC,EAAAA,EAAAA,IAAH,8JAUTqD,GAAgBrD,EAAAA,EAAAA,GAAOsD,EAAAA,GAAPtD,CAAH,wpBA0BbuD,EAAYvD,EAAAA,EAAAA,IAAH,yJAWTwD,EAAaxD,EAAAA,EAAAA,GAAH,sG,uBClDvB,SAASyD,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CACe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GACzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CACAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","pages/MovieDetails/MovieDetails.jsx","pages/MovieDetails/MovieDetails.styled.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\nwidth: 100%;\nmax-width: 1200px;\nmargin: 0 auto;\npadding: 20px;\ndisplay: flex;\ngap: 15px;\nflex-wrap: wrap;\n`;\n\n\nexport const CastBox = styled.div`\nwidth: 250px;\npadding: 4px;\ndisplay: flex;\ngap: 15px;\nflex-direction: column;\n`;\n\nexport const Name = styled.h3`\ntext-align: center;\n    color: #000;\n    font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 100;\n`;","import PropTypes from 'prop-types';\nimport { Link, Outlet } from 'react-router-dom';\nimport { Container, CastBox, Name } from './Cast.styled';\n\nconst Cast = ({ credits, movieId }) => {\n  return (\n    <Container>\n      {credits &&\n        credits.map(({ id, name, character, profile_path }) => (\n          <CastBox key={id}>\n            <Link to={`/movies/${movieId}/cast`}>\n              {profile_path && (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                  alt={name}\n                  width={180}\n                />\n              )}\n              <Name>{name}</Name>\n              <Name>Character: {character}</Name>\n            </Link>\n           { movieId === id && <Outlet />}\n          </CastBox>\n        ))}\n    </Container>\n  );\n};\n\nCast.propTypes = {\n  credits: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n    })\n  ),\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Cast;\n\n// import { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n\n// const Cast = ({ movieId }) => {\n//   const [credits, setCredits] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(false);\n\n//   useEffect(() => {\n//     const fetchCredits = async () => {\n//       try {\n//         setIsLoading(true);\n//         const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=7c36d10ef8eae7f493da1fadc9c612a4&language=en-US`);\n//         setCredits(response.data.cast);\n//         setIsLoading(false);\n//       } catch (error) {\n//         setError(true);\n//         setIsLoading(false);\n//         console.log(error);\n//       }\n//     };\n\n//     fetchCredits();\n//   }, [movieId]);\n\n//   return (\n//     <div>\n//       {isLoading && <p>Loading...</p>}\n//       {error && <p>Something went wrong.</p>}\n//       {credits &&\n//         credits.map(({ id, name, character, profile_path }) => (\n//           <div key={id}>\n//             <Link to={`/movies/${movieId}/cast/${id}`}>\n//               <h3>{name}</h3>\n//               <p>Character: {character}</p>\n//               {profile_path && (\n//                 <img\n//                   src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n//                   alt={name}\n//                 />\n//               )}\n//             </Link>\n//           </div>\n//         ))}\n//     </div>\n//   );\n// };\n\n// export default Cast;\n","import PropTypes from 'prop-types';\nimport { Link, Outlet } from 'react-router-dom';\n\nconst Reviews = ({ reviews, movieId }) => {\n  return (\n    <div>\n      {reviews && reviews.length > 0 ? (\n        reviews.map(({ id, author, content, updated_at }) => (\n          <div key={id}>\n            <Link to={`/movies/${movieId}/reviews`}>\n            <h3>Author: {author}</h3>\n              <p>{updated_at}</p>\n              <p>{content}</p>\n            </Link>\n            <Outlet />\n          </div>\n        ))\n      ) : (\n        <p>No reviews available.</p>\n      )}\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      updated_at: PropTypes.string.isRequired,\n    })\n  ),\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Reviews;\n\n// import { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n\n// const Reviews = ({ movieId }) => {\n//   const [reviews, setReviews] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(false);\n\n//   useEffect(() => {\n//     const fetchReviews = async () => {\n//       try {\n//         setIsLoading(true);\n//         const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=7c36d10ef8eae7f493da1fadc9c612a4&language=en-US&page=1`);\n//         setReviews(response.data.results);\n//         setIsLoading(false);\n//       } catch (error) {\n//         setError(true);\n//         setIsLoading(false);\n//         console.log(error);\n//       }\n//     };\n\n//     fetchReviews();\n//   }, [movieId]);\n\n//   return (\n//     <div>\n//       {isLoading && <p>Loading...</p>}\n//       {error && <p>Something went wrong.</p>}\n//       {reviews && reviews.length > 0 ? (\n//         reviews.map(({ id, content, updated_at }) => (\n//           <div key={id}>\n//             <Link to={`/movies/${movieId}/reviews/${id}`}>\n//               <p>{updated_at}</p>\n//               <p>{content}</p>\n//             </Link>\n//           </div>\n//         ))\n//       ) : (\n//         <p>No reviews available.</p>\n//         )}\n//     </div>\n//   );\n// };\n\n// export default Reviews;\n\n// import { Link } from 'react-router-dom';\n\n// const Reviews = () => {\n//   const [reviews, setReviews] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(false);\n\n//   const { movieId } = useParams();\n\n//   useEffect(() => {\n//     const fetchReviews = async () => {\n//       try {\n//         setIsLoading(true);\n//         const response = await axios.get(\n//           `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n//         );\n//         setReviews(response.data.results);\n//         setIsLoading(false);\n//       } catch (error) {\n//         setError(true);\n//         setIsLoading(false);\n//         console.log(error);\n//       }\n//     };\n//     fetchReviews();\n//   }, [movieId]);\n\n//   return (\n//     <div>\n//       <h2>Reviews:</h2>\n//       {isLoading && <p>Loading...</p>}\n//       {error && <p>Something went wrong.</p>}\n//       {reviews && reviews.length > 0 ? (\n//         reviews.map(({ id, content, updated_at }) => (\n//           <div key={id}>\n//             <p>{updated_at}</p>\n//             <p>{content}</p>\n//           </div>\n//         ))\n//       ) : (\n//         <p>No reviews available.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Reviews;\n","import { useState, useEffect } from 'react';\nimport { NavLink, useParams, useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\nimport Cast from 'components/Cast/Cast';\nimport Reviews from 'components/Reviews/Reviews';\nimport {\n  Container,\n  StyledBtnLink,\n  MovDetBox,\n  DetailsBox,\n} from './MovieDetails.styled';\n\nconst API_KEY = '7c36d10ef8eae7f493da1fadc9c612a4';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [credits, setCredits] = useState(null);\n  const [reviews, setReviews] = useState(null);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  const [visibleComponent, setVisibleComponent] = useState('');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      const movieResponse = await fetch(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n      );\n      const movieData = await movieResponse.json();\n      setMovie(movieData);\n\n      const creditsResponse = await fetch(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n      );\n      const creditsData = await creditsResponse.json();\n      setCredits(creditsData.cast);\n\n      const reviewsResponse = await fetch(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n      );\n      const reviewsData = await reviewsResponse.json();\n      setReviews(reviewsData.results);\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movie) {\n    return <p>Loading...</p>;\n  }\n\n  const handleVisibleComponent = component => {\n    setVisibleComponent(component);\n  };\n\n  return (\n    <>\n      <StyledBtnLink to={backLinkLocationRef.current}>Go back</StyledBtnLink>\n      <Container>\n        <MovDetBox>\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                : 'https://cdn.pixabay.com/photo/2018/03/22/02/37/background-3249063_960_720.png'\n            }\n            alt={movie.title}\n            width={400}\n          />\n          <h1>{movie.title}</h1>\n          <p>{movie.overview}</p>\n          <DetailsBox>\n            <li>\n              <NavLink\n                to={`/movies/${movieId}/cast`}\n                onClick={() => handleVisibleComponent('cast')}\n              >\n                Cast\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to={`/movies/${movieId}/reviews`}\n                onClick={() => handleVisibleComponent('reviews')}\n              >\n                Reviews\n              </NavLink>\n            </li>\n          </DetailsBox>\n        </MovDetBox>\n        {visibleComponent === 'cast' && (\n          <Cast credits={credits} movieId={movieId} />\n        )}\n        {visibleComponent === 'reviews' && (\n          <Reviews reviews={reviews} movieId={movieId} />\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default MovieDetails;\n\n\n\n\n\n\n// import axios from 'axios';\n// import { useEffect, useState } from 'react';\n// import { NavLink, Outlet, useParams, useLocation, Link } from 'react-router-dom';\n// import { useRef } from 'react';\n// import Cast from 'components/Cast/Cast';\n// import Reviews from 'components/Reviews/Reviews';\n// import { Container, StyledBtnLink, MovDetBox } from './MovieDetails.styled';\n\n// const API_KEY = '7c36d10ef8eae7f493da1fadc9c612a4';\n\n// const MovieDetails = () => {\n//   const location = useLocation();\n//   const [credits, setCredits] = useState([]);\n//   const [reviews, setReviews] = useState([]);\n//   const [movie, setMovie] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(false);\n\n//   const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n//   const { movieId } = useParams();\n\n//   useEffect(() => {\n//     const fetchMovieDetails = async () => {\n//       try {\n//         setIsLoading(true);\n//         if (!movieId) return;\n//         const [creditsResponse, reviewsResponse] = await Promise.all([\n//           axios.get(\n//             `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n//           ),\n//           axios.get(\n//             `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n//           ),\n//           axios.get(\n//             `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n//           ),\n//         ]);\n\n//         setMovie(creditsResponse.data);\n//         setCredits(creditsResponse.data.cast);\n//         setReviews(reviewsResponse.data.results);\n//         setIsLoading(false);\n//       } catch (error) {\n//         setError(true);\n//         setIsLoading(false);\n//         console.log(error);\n//       }\n//     };\n//     fetchMovieDetails();\n//   }, [movieId]);\n\n//   return (\n//     <>\n//       <StyledBtnLink to={backLinkLocationRef.current}>Go back</StyledBtnLink>\n//       {isLoading && <p>Loading...</p>}\n//       {error && <p>Something went wrong.</p>}\n//       {movie && (\n//         <Container>\n//           <img\n//             src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n//             alt={movie.title}\n//           />\n//           <MovDetBox>\n//             <h2>{movie.title}</h2>\n//             <p>{movie.overview}</p>\n//             <p>\n//               {movie.genres &&\n//                 movie.genres.map(genre => (\n//                   <span key={genre.id}>{genre.name} </span>\n//                 ))}\n//             </p>\n//             <ul>\n//               <li>\n//                 <NavLink to={`/movies/${movieId}/cast`}>Cast</NavLink>\n//               </li>\n//               <li>\n//                 <NavLink to={`/movies/${movieId}/reviews`}>Reviews</NavLink>\n//               </li>\n//             </ul>\n//           </MovDetBox>\n//           <div>\n//             <Link to={`/movies/${movieId}`}>\n//               {credits && <Cast credits={credits} movieId={movieId} />}\n//               {reviews && <Reviews reviews={reviews} movieId={movieId} />}\n//               <Outlet />\n//             </Link>\n//           </div>\n//           <Outlet />\n//         </Container>\n//       )}\n//     </>\n//   );\n// };\n\n// export default MovieDetails;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\nwidth: 100%;\nmargin: 50px;\npadding: 20px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n`;\n\nexport const StyledBtnLink = styled(Link)`\nmargin: 20px;\npadding: 4px 8px;\n  border-radius: 2px;\n  background-color: #71B280;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 100;\n  min-width: 40px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  \n  &:hover {\n    background-image: linear-gradient(to right, #134E5E 0%, #71B280 51%, #134E5E 100%);\n  }\n`;\n\nexport const MovDetBox = styled.div`\nwidth: 700px;\n\npadding: 20px;\ndisplay: flex;\ngap: 50px;\nflex-wrap: wrap;\njustify-content: flex-start;\nalign-items: left;\n`;\n\nexport const DetailsBox = styled.ul`\nwidth: 700px;\npadding: 10px;\ndisplay: flex;\ngap: 15px;\nflex-wrap: wrap;\n\n`;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["Container","styled","CastBox","Name","credits","movieId","map","id","name","character","profile_path","to","src","alt","width","reviews","length","author","content","updated_at","API_KEY","useParams","useState","movie","setMovie","setCredits","setReviews","location","useLocation","backLinkLocationRef","useRef","state","from","visibleComponent","setVisibleComponent","useEffect","fetchMovieDetails","fetch","movieResponse","json","movieData","creditsResponse","creditsData","cast","reviewsResponse","reviewsData","results","handleVisibleComponent","component","current","poster_path","title","overview","onClick","StyledBtnLink","Link","MovDetBox","DetailsBox","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}