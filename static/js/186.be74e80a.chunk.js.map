{"version":3,"file":"static/js/186.be74e80a.chunk.js","mappings":"8KAoCA,UAjCgB,SAAC,GAA0B,IAAxBA,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC1B,OACE,yBACGD,GAAWA,EAAQE,OAAS,EAC3BF,EAAQG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,WAAxB,OACV,4BACE,UAAC,KAAD,CAAMC,GAAE,kBAAaP,EAAb,YAAR,WACA,qCAAaI,MACX,uBAAIE,KACJ,uBAAID,QAEN,SAAC,KAAD,MANQF,EADA,KAWZ,kDAIP,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, Outlet } from 'react-router-dom';\n\nconst Reviews = ({ reviews, movieId }) => {\n  return (\n    <div>\n      {reviews && reviews.length > 0 ? (\n        reviews.map(({ id, author, content, updated_at }) => (\n          <div key={id}>\n            <Link to={`/movies/${movieId}/reviews`}>\n            <h3>Author: {author}</h3>\n              <p>{updated_at}</p>\n              <p>{content}</p>\n            </Link>\n            <Outlet />\n          </div>\n        ))\n      ) : (\n        <p>No reviews available.</p>\n      )}\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      updated_at: PropTypes.string.isRequired,\n    })\n  ),\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Reviews;\n\n// import { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n\n// const Reviews = ({ movieId }) => {\n//   const [reviews, setReviews] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(false);\n\n//   useEffect(() => {\n//     const fetchReviews = async () => {\n//       try {\n//         setIsLoading(true);\n//         const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=7c36d10ef8eae7f493da1fadc9c612a4&language=en-US&page=1`);\n//         setReviews(response.data.results);\n//         setIsLoading(false);\n//       } catch (error) {\n//         setError(true);\n//         setIsLoading(false);\n//         console.log(error);\n//       }\n//     };\n\n//     fetchReviews();\n//   }, [movieId]);\n\n//   return (\n//     <div>\n//       {isLoading && <p>Loading...</p>}\n//       {error && <p>Something went wrong.</p>}\n//       {reviews && reviews.length > 0 ? (\n//         reviews.map(({ id, content, updated_at }) => (\n//           <div key={id}>\n//             <Link to={`/movies/${movieId}/reviews/${id}`}>\n//               <p>{updated_at}</p>\n//               <p>{content}</p>\n//             </Link>\n//           </div>\n//         ))\n//       ) : (\n//         <p>No reviews available.</p>\n//         )}\n//     </div>\n//   );\n// };\n\n// export default Reviews;\n\n// import { Link } from 'react-router-dom';\n\n// const Reviews = () => {\n//   const [reviews, setReviews] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(false);\n\n//   const { movieId } = useParams();\n\n//   useEffect(() => {\n//     const fetchReviews = async () => {\n//       try {\n//         setIsLoading(true);\n//         const response = await axios.get(\n//           `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n//         );\n//         setReviews(response.data.results);\n//         setIsLoading(false);\n//       } catch (error) {\n//         setError(true);\n//         setIsLoading(false);\n//         console.log(error);\n//       }\n//     };\n//     fetchReviews();\n//   }, [movieId]);\n\n//   return (\n//     <div>\n//       <h2>Reviews:</h2>\n//       {isLoading && <p>Loading...</p>}\n//       {error && <p>Something went wrong.</p>}\n//       {reviews && reviews.length > 0 ? (\n//         reviews.map(({ id, content, updated_at }) => (\n//           <div key={id}>\n//             <p>{updated_at}</p>\n//             <p>{content}</p>\n//           </div>\n//         ))\n//       ) : (\n//         <p>No reviews available.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Reviews;\n"],"names":["reviews","movieId","length","map","id","author","content","updated_at","to"],"sourceRoot":""}