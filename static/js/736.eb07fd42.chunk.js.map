{"version":3,"file":"static/js/736.eb07fd42.chunk.js","mappings":"qOAEaA,EAAYC,EAAAA,EAAAA,IAAH,yIAWTC,EAAUD,EAAAA,EAAAA,IAAH,2GAQPE,EAAOF,EAAAA,EAAAA,GAAH,gL,SCmBjB,EApCa,SAAC,GAA0B,IAAxBG,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACvB,OACE,SAACL,EAAD,UACGI,GACCA,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACV,UAACR,EAAD,YACE,UAAC,KAAD,CAAMS,GAAE,kBAAaN,EAAb,SAAR,UACGK,IACC,gBACEE,IAAG,yCAAoCF,GACvCG,IAAKL,EACLM,MAAO,OAGX,SAACX,EAAD,UAAOK,KACP,UAACL,EAAD,yBAAkBM,QAEnBJ,IAAYE,IAAM,SAAC,KAAD,MAZPA,EADJ,KAkBnB,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\nwidth: 100%;\nmax-width: 1200px;\nmargin: 0 auto;\npadding: 20px;\ndisplay: flex;\ngap: 15px;\nflex-wrap: wrap;\n`;\n\n\nexport const CastBox = styled.div`\nwidth: 250px;\npadding: 4px;\ndisplay: flex;\ngap: 15px;\nflex-direction: column;\n`;\n\nexport const Name = styled.h3`\ntext-align: center;\n    color: #000;\n    font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 100;\n`;","import PropTypes from 'prop-types';\nimport { Link, Outlet } from 'react-router-dom';\nimport { Container, CastBox, Name } from './Cast.styled';\n\nconst Cast = ({ credits, movieId }) => {\n  return (\n    <Container>\n      {credits &&\n        credits.map(({ id, name, character, profile_path }) => (\n          <CastBox key={id}>\n            <Link to={`/movies/${movieId}/cast`}>\n              {profile_path && (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                  alt={name}\n                  width={180}\n                />\n              )}\n              <Name>{name}</Name>\n              <Name>Character: {character}</Name>\n            </Link>\n           { movieId === id && <Outlet />}\n          </CastBox>\n        ))}\n    </Container>\n  );\n};\n\nCast.propTypes = {\n  credits: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n    })\n  ),\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Cast;\n\n// import { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n\n// const Cast = ({ movieId }) => {\n//   const [credits, setCredits] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(false);\n\n//   useEffect(() => {\n//     const fetchCredits = async () => {\n//       try {\n//         setIsLoading(true);\n//         const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=7c36d10ef8eae7f493da1fadc9c612a4&language=en-US`);\n//         setCredits(response.data.cast);\n//         setIsLoading(false);\n//       } catch (error) {\n//         setError(true);\n//         setIsLoading(false);\n//         console.log(error);\n//       }\n//     };\n\n//     fetchCredits();\n//   }, [movieId]);\n\n//   return (\n//     <div>\n//       {isLoading && <p>Loading...</p>}\n//       {error && <p>Something went wrong.</p>}\n//       {credits &&\n//         credits.map(({ id, name, character, profile_path }) => (\n//           <div key={id}>\n//             <Link to={`/movies/${movieId}/cast/${id}`}>\n//               <h3>{name}</h3>\n//               <p>Character: {character}</p>\n//               {profile_path && (\n//                 <img\n//                   src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n//                   alt={name}\n//                 />\n//               )}\n//             </Link>\n//           </div>\n//         ))}\n//     </div>\n//   );\n// };\n\n// export default Cast;\n"],"names":["Container","styled","CastBox","Name","credits","movieId","map","id","name","character","profile_path","to","src","alt","width"],"sourceRoot":""}