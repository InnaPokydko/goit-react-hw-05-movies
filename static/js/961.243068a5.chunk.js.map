{"version":3,"file":"static/js/961.243068a5.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","pages/MovieDetails/MovieDetails.jsx","pages/MovieDetails/MovieDetails.styled.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\nwidth: 100%;\nmax-width: 1200px;\nmargin: 0 auto;\npadding: 20px;\ndisplay: flex;\ngap: 15px;\nflex-wrap: wrap;\n`;\n\n\nexport const CastBox = styled.div`\nwidth: 250px;\npadding: 4px;\ndisplay: flex;\ngap: 15px;\nflex-direction: column;\n`;\n\nexport const Name = styled.h3`\ntext-align: center;\n    color: #000;\n    \n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 100;\n`;","// import PropTypes from 'prop-types';\n// import { Link } from 'react-router-dom';\nimport { Container, CastBox, Name } from './Cast.styled';\n\nconst defImg =\n  'https://images01.nicepagecdn.com/page/37/32/web-page-design-preview-373292.jpg';\n\nconst Cast = ({ credits, movieId }) => {\n  return (\n    <Container>\n      {credits &&\n        (credits.length > 0 ? (\n          credits.map(({ id, name, character, profile_path }) => {\n            const imgSrc = profile_path\n              ? `https://image.tmdb.org/t/p/w500${profile_path}`\n              : defImg;\n            return (\n              <CastBox key={id}>\n                \n                  <img src={imgSrc} alt={name} width={180} />\n                  <Name>{name}</Name>\n                  <Name>Character: {character}</Name>\n               \n              </CastBox>\n            );\n          })\n        ) : (\n          <p>No cast</p>\n        ))}\n    </Container>\n  );\n};\n\n// Cast.propTypes = {\n//   credits: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       name: PropTypes.string.isRequired,\n//       character: PropTypes.string.isRequired,\n//       profile_path: PropTypes.string,\n//     })\n//   ),\n//   movieId: PropTypes.number.isRequired,\n// };\n\nexport default Cast;\n\n// import { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n\n// const Cast = ({ movieId }) => {\n//   const [credits, setCredits] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(false);\n\n//   useEffect(() => {\n//     const fetchCredits = async () => {\n//       try {\n//         setIsLoading(true);\n//         const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=7c36d10ef8eae7f493da1fadc9c612a4&language=en-US`);\n//         setCredits(response.data.cast);\n//         setIsLoading(false);\n//       } catch (error) {\n//         setError(true);\n//         setIsLoading(false);\n//         console.log(error);\n//       }\n//     };\n\n//     fetchCredits();\n//   }, [movieId]);\n\n//   return (\n//     <div>\n//       {isLoading && <p>Loading...</p>}\n//       {error && <p>Something went wrong.</p>}\n//       {credits &&\n//         credits.map(({ id, name, character, profile_path }) => (\n//           <div key={id}>\n//             <Link to={`/movies/${movieId}/cast/${id}`}>\n//               <h3>{name}</h3>\n//               <p>Character: {character}</p>\n//               {profile_path && (\n//                 <img\n//                   src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n//                   alt={name}\n//                 />\n//               )}\n//             </Link>\n//           </div>\n//         ))}\n//     </div>\n//   );\n// };\n\n// export default Cast;\n","import styled from '@emotion/styled';\n\nexport const ReviewsBox = styled.div`\nwidth: 700px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: 20px;\n`;\n\nexport const ReviewItem = styled.li`\n  border-radius: 4px;\n  background-color: #221c21;\n  padding: 20px;\n  box-shadow: 0px 1px 2px rgb(255 158 0 / 40%), 0px 2px 4px rgb(255 0 245 / 30%),\n    0px 4px 8px rgb(255 221 0 / 40%), 0px 4px 16px rgb(255 247 254 / 10%);\n`;\n\nexport const Text = styled.p`\nfont-family: 'Roboto';\ncolor: #000;\n    font-size: 14px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 100;\n\n`;","import PropTypes from 'prop-types';\n// import { Link } from 'react-router-dom';\nimport { ReviewsBox, Text} from './Reviews.styled';\n\nconst Reviews = ({ reviews, movieId }) => {\n  return (\n    <ReviewsBox>\n      {reviews && (reviews.length > 0 ? (\n        reviews.map(({ id, author, content }) => (\n          <div key={id}>\n           \n              <h3>Author: {author}</h3>\n              <Text>{content}</Text>\n            \n          </div>\n        ))\n      ) : (\n        <p>No reviews available</p>\n      ))}\n    </ReviewsBox>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      updated_at: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Reviews;\n\n// import { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n\n// const Reviews = ({ movieId }) => {\n//   const [reviews, setReviews] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(false);\n\n//   useEffect(() => {\n//     const fetchReviews = async () => {\n//       try {\n//         setIsLoading(true);\n//         const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=7c36d10ef8eae7f493da1fadc9c612a4&language=en-US&page=1`);\n//         setReviews(response.data.results);\n//         setIsLoading(false);\n//       } catch (error) {\n//         setError(true);\n//         setIsLoading(false);\n//         console.log(error);\n//       }\n//     };\n\n//     fetchReviews();\n//   }, [movieId]);\n\n//   return (\n//     <div>\n//       {isLoading && <p>Loading...</p>}\n//       {error && <p>Something went wrong.</p>}\n//       {reviews && reviews.length > 0 ? (\n//         reviews.map(({ id, content, updated_at }) => (\n//           <div key={id}>\n//             <Link to={`/movies/${movieId}/reviews/${id}`}>\n//               <p>{updated_at}</p>\n//               <p>{content}</p>\n//             </Link>\n//           </div>\n//         ))\n//       ) : (\n//         <p>No reviews available.</p>\n//         )}\n//     </div>\n//   );\n// };\n\n// export default Reviews;\n\n// import { Link } from 'react-router-dom';\n\n// const Reviews = () => {\n//   const [reviews, setReviews] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(false);\n\n//   const { movieId } = useParams();\n\n//   useEffect(() => {\n//     const fetchReviews = async () => {\n//       try {\n//         setIsLoading(true);\n//         const response = await axios.get(\n//           `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n//         );\n//         setReviews(response.data.results);\n//         setIsLoading(false);\n//       } catch (error) {\n//         setError(true);\n//         setIsLoading(false);\n//         console.log(error);\n//       }\n//     };\n//     fetchReviews();\n//   }, [movieId]);\n\n//   return (\n//     <div>\n//       <h2>Reviews:</h2>\n//       {isLoading && <p>Loading...</p>}\n//       {error && <p>Something went wrong.</p>}\n//       {reviews && reviews.length > 0 ? (\n//         reviews.map(({ id, content, updated_at }) => (\n//           <div key={id}>\n//             <p>{updated_at}</p>\n//             <p>{content}</p>\n//           </div>\n//         ))\n//       ) : (\n//         <p>No reviews available.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Reviews;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Link, useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { toast } from 'react-toastify';\nimport Cast from 'components/Cast/Cast';\nimport Reviews from 'components/Reviews/Reviews';\nimport {\n  Container,\n  StyledBtnLink,\n  MovDetBox,\n  DetailsBox,\n} from './MovieDetails.styled';\n\nconst API_KEY = '7c36d10ef8eae7f493da1fadc9c612a4';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [credits, setCredits] = useState(null);\n  const [reviews, setReviews] = useState(null);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  const [visibleComponent, setVisibleComponent] = useState('');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const movieResponse = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n        );\n        const movieData = await movieResponse.json();\n        setMovie(movieData);\n\n        const creditsResponse = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n        );\n        const creditsData = await creditsResponse.json();\n        setCredits(creditsData.cast);\n\n        const reviewsResponse = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n        );\n        const reviewsData = await reviewsResponse.json();\n        setReviews(reviewsData.results);\n      } catch (error) {\n        toast.error(error.message);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movie) {\n    return <p>Loading...</p>;\n  }\n\n  const handleVisibleComponent = component => {\n    setVisibleComponent(component);\n  };\n\n  return (\n    <>\n      <StyledBtnLink to={backLinkLocationRef.current}>Go back</StyledBtnLink>\n      <Container>\n        <MovDetBox>\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                : 'https://cdn.pixabay.com/photo/2018/03/22/02/37/background-3249063_960_720.png'\n            }\n            alt={movie.title}\n            width={400}\n          />\n          <h1>{movie.title}</h1>\n          <p>{movie.overview}</p>\n          <p>\n            {movie.genres &&\n              movie.genres.map(genre => (\n                <span key={genre.id}>{genre.name} </span>\n              ))}\n          </p>\n          <DetailsBox>\n            <li>\n              <Link\n                to={`/movies/${movieId}/cast`}\n                onClick={() => handleVisibleComponent('cast')}\n                style={{ display: movie.poster_path ? 'block' : 'none' }}\n              >\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link\n                to={`/movies/${movieId}/reviews`}\n                onClick={() => handleVisibleComponent('reviews')}\n                style={{ display: movie.poster_path ? 'block' : 'none' }}\n              >\n                Reviews\n              </Link>\n            </li>\n          </DetailsBox>\n        </MovDetBox>\n\n        {visibleComponent === 'cast' && (\n          <Cast credits={credits} movieId={movieId} />\n        )}\n\n        {visibleComponent === 'reviews' && (\n          <Reviews reviews={reviews} movieId={movieId} />\n        )}\n\n        {!movie.poster_path && (\n          <div>\n            <p>Movie not found</p>\n          </div>\n        )}\n\n        {movie.poster_path && (\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default MovieDetails;\n\n\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\nwidth: 100%;\nmargin: 50px;\npadding: 20px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n`;\n\nexport const StyledBtnLink = styled(Link)`\nmargin: 20px;\npadding: 4px 8px;\n  border-radius: 2px;\n  background-color: #71B280;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 100;\n  min-width: 40px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  \n  &:hover {\n    background-image: linear-gradient(to right, #134E5E 0%, #71B280 51%, #134E5E 100%);\n  }\n`;\n\nexport const MovDetBox = styled.div`\nwidth: 700px;\n\npadding: 20px;\ndisplay: flex;\ngap: 50px;\nflex-wrap: wrap;\njustify-content: flex-start;\nalign-items: left;\n`;\n\nexport const DetailsBox = styled.ul`\nwidth: 700px;\npadding: 10px;\ndisplay: flex;\ngap: 15px;\nflex-wrap: wrap;\n\n`;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["Container","styled","CastBox","Name","credits","movieId","length","map","id","name","character","profile_path","imgSrc","src","alt","width","ReviewsBox","Text","reviews","author","content","API_KEY","useParams","useState","movie","setMovie","setCredits","setReviews","location","useLocation","backLinkLocationRef","useRef","state","from","visibleComponent","setVisibleComponent","useEffect","fetchMovieDetails","fetch","movieResponse","json","movieData","creditsResponse","creditsData","cast","reviewsResponse","reviewsData","results","toast","message","handleVisibleComponent","component","to","current","poster_path","title","overview","genres","genre","onClick","style","display","Suspense","fallback","StyledBtnLink","Link","MovDetBox","DetailsBox","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}