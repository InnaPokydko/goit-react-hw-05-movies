{"version":3,"file":"static/js/879.55631edb.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/MovieDetails/MovieDetails.styled.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movie.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\nwidth: 100%;\nmax-width: 1200px;\nmargin: 0 auto;\npadding: 20px;\n`;\n\nexport const List = styled.ul`\nlist-style: none;\ndisplay: grid;\ngrid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\ngap: 15px;\npadding: 15px;\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n`;\n\nexport const Item = styled.li`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nborder: 1px solid #ccc;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\npadding: 15px;\n \n  :hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Title = styled.h2`\nfont-size: 1.5rem;\nmargin-top: 10px;\nmargin-bottom: 0;\nalign-items: center;\ncolor: #134E5E;\n`;\n\nexport const TitleBox = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nheight: 50px; \nbackground-color: rgba(0, 0, 0, 0.8); \nposition: absolute; \nbottom: 0;\nwidth: 100%; \nopacity: 0; \ntransition: opacity 0.2s ease-in-out;`\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Container, List, Item, Title, Poster } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Container>\n      <List>\n        {movies.map(({ id, title, name, poster_path }) => (\n          <Item key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <Poster\n                src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                alt={title}\n                width={320}\n              />\n\n              <Title>{title || name}</Title>\n            </Link>\n          </Item>\n        ))}\n      </List>\n    </Container>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      poster_path: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\nwidth: 100%;\nmargin: 50px;\npadding: 20px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n`;\n\nexport const StyledBtnLink = styled(Link)`\nmargin: 20px;\npadding: 4px 8px;\n  border-radius: 2px;\n  background-color: #71B280;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 100;\n  min-width: 40px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  \n  &:hover {\n    background-image: linear-gradient(to right, #134E5E 0%, #71B280 51%, #134E5E 100%);\n  }\n`;\n\nexport const MovDetBox = styled.div`\nwidth: 700px;\n\npadding: 20px;\ndisplay: flex;\ngap: 50px;\nflex-wrap: wrap;\njustify-content: flex-start;\nalign-items: left;\n`;\n\nexport const DetailsBox = styled.ul`\nwidth: 700px;\npadding: 10px;\ndisplay: flex;\ngap: 15px;\nflex-wrap: wrap;\n\n`;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const SearchbarBox = styled.div`\nwidth: 250px;\nheight: 40px;\n  // top: 0;\n  // left: 0;\n  // position: sticky;\n  // z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n \n  padding: 8px;\n  color: #fff;\n  background-image: linear-gradient(to right, #134E5E 0%, #134E5E 100%);\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const FormSearch = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const FormInput = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchBtn = styled.button`\ndisplay: inline-block;\nwidth: 48px;\nheight: 48px;\nborder: 0;\nbackground-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\nbackground-size: 40%;\nbackground-repeat: no-repeat;\nbackground-position: center;\nopacity: 0.6;\ntransition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\ncursor: pointer;\noutline: none;\n\n\n&:hover {\n  opacity: 1;\n}`\n\nexport const SearchBtnLabel = styled.span`\nposition: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;`","import PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { BsSearch } from 'react-icons/bs';\nimport {\n  SearchbarBox,\n  FormSearch,\n  FormInput,\n  SearchBtn,\n  SearchBtnLabel,\n} from './Searchbar.styled';\n\nconst initialValues = {\n  search: '',\n};\n\nconst Searchbar = ({ onSubmit }) => {\n  \n  const handleSubmit = (values, actions) => {\n    onSubmit(values.search);\n    actions.resetForm();\n  };\n\n  return (\n    <SearchbarBox>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <FormSearch>\n          <SearchBtn type=\"submit\">\n            <BsSearch style={{ width: '16px', height: '16px' }} />\n            <SearchBtnLabel>Search</SearchBtnLabel>\n          </SearchBtn>\n\n          <FormInput\n            name=\"search\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n          />\n        </FormSearch>\n      </Formik>\n    </SearchbarBox>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;","import styled from '@emotion/styled';\n\nexport const MoviesBox = styled.div`\n  width: 100%;\n    margin: 40px;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;","import { useState, useEffect } from 'react';\nimport {  useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport MovieList from 'components/MovieList/MovieList';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport { MoviesBox } from './Movie.styled';\nimport { StyledBtnLink } from 'pages/MovieDetails/MovieDetails.styled';\n\nconst API_KEY = '7c36d10ef8eae7f493da1fadc9c612a4';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMovie, setSearchMovie] = useState(\n    searchParams.get('movieId') ?? '',\n  );\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        if (!searchMovie) return;\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/search/movie?query=${searchMovie}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n        );\n        setMovies(response.data.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMovies();\n  }, [searchMovie]);\n\n  const updateQueryString = evt => {\n    const searchValue = evt.target.value;\n    if (searchValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ movieId: searchValue });\n  };\n\n  const handleSearchSubmit = searchValue => {\n    setSearchParams({ movieId: searchValue });\n    setSearchMovie(searchValue);\n  };\n\n  const visibleMovies = movies.filter(movie =>\n    movie.title.toLowerCase().includes(searchMovie.toLowerCase())\n  );\n\n  return (\n    <>\n    <StyledBtnLink to=\"/\">Go Back</StyledBtnLink>\n      <MoviesBox>\n              <Searchbar\n          onSubmit={handleSearchSubmit}\n          type=\"text\"\n          value={searchMovie}\n          onChange={updateQueryString}\n        />\n        <MovieList movies={visibleMovies} />\n          </MoviesBox>\n    </>\n  );\n};\n\nexport default Movies;\n\n//   const [query, setQuery] = useState('');\n//   const [searchParams, setSearchParams] = useSearchParams({ query: '' });\n//   const location = useLocation();\n//   const movieId = searchParams.get('movieId') ?? '';\n\n//   useEffect(() => {\n//     const searchQuery = searchParams.get('query');\n//     if (searchQuery) {\n//       setQuery(searchQuery);\n//     }\n//   }, [location.search, searchParams]);\n\n//   const handleSearch = async (query) => {\n//     setQuery(query);\n//     setSearchParams({ query });\n//   };\n\n//   useEffect(() => {\n//     const fetchMovies = async () => {\n//       try {\n//         const response = await axios.get(`https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`);\n//         setMovies(response.data.results);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n//     fetchMovies();\n//   }, [query]);\n\n//   const visibleMovies = movies.filter(movie => movie.includes(movieId));\n\n//   return (\n//     <div>\n//       <h2>Movies</h2>\n//       <Searchbar onSubmit={handleSearch} />\n//       {movies && <MovieList movies={movies} />}\n//     </div>\n//   );\n// };\n\n// export default Movies;\n"],"names":["Container","styled","List","Poster","Item","Title","movies","location","useLocation","map","id","title","name","poster_path","to","state","from","src","alt","width","StyledBtnLink","Link","MovDetBox","DetailsBox","SearchbarBox","FormSearch","Form","FormInput","Field","SearchBtn","SearchBtnLabel","initialValues","search","onSubmit","values","actions","resetForm","type","style","height","autoComplete","autoFocus","placeholder","MoviesBox","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","searchMovie","setSearchMovie","useEffect","fetchMovies","axios","response","data","results","console","error","visibleMovies","filter","movie","toLowerCase","includes","searchValue","movieId","value","onChange","evt","target","MovieList"],"sourceRoot":""}